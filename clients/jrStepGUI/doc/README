This file is part of the jrStepGUI software.

Copyright 2010 Jean-Louis Paquelin

jrStepGUI is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
any later version.
 
jrStepGUI is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with jrStepGUI. If not, see <http://www.gnu.org/licenses/>.

Contact info: jrstepgui@studionex.com

INTRODUCTION

Below you'll find some excerpts of the first mail I (Jean-Louis Paquelin) have
exchanged with the rStep author (Reza Naima). It could be the seed of an
installation documentation.

jrStepGUI is a Java rStep Graphic User Interface. It is supposed to be
platform independent. Actually, it depends on the availability of the RXTX
library which handles the serial communications between a computer and the
Arduino (or the rStep hardware).

INSTALLATION

Before using jrStepGUI, you have to install the RXTX library. If you are under
linux/windows/osx, download the library's archive and follow the instructions
given in the file. Alternatively, you can try the library's web install. It
should be easier to proceed this way, but I'm not shure it works.

If you are running a less common OS, go to the RXTX website in the Download
section or browse their repository, you need both the RXTXcomm.jar and the
native library depending on your OS.

RXTX library:
	http://www.rxtx.org/
RXTX library archive:
	http://rxtx.qbang.org/pub/rxtx/rxtx-2.1-7-bins-r2.zip
RXTX web install:
	http://show.docjava.com:8086/book/cgij/code/jnlp/gnu.io.SafeCommDriver.jnlp
RXTX for all OSes:
	http://rxtx.qbang.org/ToyBox/2.1-7-build1/
	
btw, you need a working JRE 1.5 or greater.

Once the library is installed, you'll just have to run jrStepGUI.jar.

STORY
2011-01-28
* Pops up an error dialog when the RXTX native library is not found.
* Some application icon added.

2011-01-20
* com.studionex.rStep.RStep.reset() and
  com.studionex.jrStepGUI.rStep.RStep.reset() have been renamed
  com.studionex.rStep.RStep.resetConnection() and
  com.studionex.jrStepGUI.rStep.RStep.resetConnection() respectively.

2010-12-23
* Command splitting was wrong for Fn Gx commands in com.studionex.jrStepGUI.rStep.RStep.
* Comments within curly brace are removed in com.studionex.jrStepGUI.rStep.PlayThread. 

2010-12-17
* Added PWM duty cycle value in HardwareConfigJDialog.
* Current message values and feed rate turned from double to int after reading
  rStep typedef struct config_t in _init.h. 

2010-12-16
* A little dialog (HardwareConfigJDialog) to set up the rStep non-volatile
  memory has been added.

2010-12-12
* Pause and Abort button behavior fixed (enabled when playing back).
* SBI display in the InfoJPanel class (previously called CoordinatesJPanel).
  The values are initialized by the recall of stored values (M201) immediately
  after receiving the START reply.

2010-12-09
* Use of an EventBus to share the events between multiple UI classes
  (http://www.eventbus.org/).
* Threaded handling of multiple GCodes on the same line. This feature uses the
  same scheme as the PlayThread class. 

2010-11-25
* Rewrite of com.studionex.jrStepGUI.rStep.RStep to have a slightly better
  decoupling between the low level class (com.studionex.rStep.RStep) and the
  higher level Swing UI. This rewrite also takes care of Swing threading.
* SendExpectOk() has been removed from the RStep class and replaced by send()
  and an event mechanism to get the replies from the rStep board. 

2010-10-10
* Now the rStep output is handled by the Serial and the InputParser Java
  classes. While Serial runs the rStep I/O, InputParser parses the data sent
  by rStep then call the appropriate listeners and send them an event.

2010-10-08
* Console code is completely rewritten. It is much more efficient and reactive
  than the previous version.

2010-09-22
* com.studionex.rStep.RStep.expect(String, long)
  After upgrading the rStep firmware from r11 to r25 something went wrong with
  the startup string and I had to change to handle regular expressions.
* com.studionex.jrStepGUI.MainJPanel.MESSAGE_DELAY
  Changed from 5 to 10 seconds and comment added there.
  
2010-09-20
* First public release
